// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.17.3
// source: tictactoe_battle/resource.proto

package tictactoe_battle

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Violations int32

const (
	Violations_UNDEFINED_VIOLATION Violations = 0
)

// Enum value maps for Violations.
var (
	Violations_name = map[int32]string{
		0: "UNDEFINED_VIOLATION",
	}
	Violations_value = map[string]int32{
		"UNDEFINED_VIOLATION": 0,
	}
)

func (x Violations) Enum() *Violations {
	p := new(Violations)
	*p = x
	return p
}

func (x Violations) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Violations) Descriptor() protoreflect.EnumDescriptor {
	return file_tictactoe_battle_resource_proto_enumTypes[0].Descriptor()
}

func (Violations) Type() protoreflect.EnumType {
	return &file_tictactoe_battle_resource_proto_enumTypes[0]
}

func (x Violations) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Violations.Descriptor instead.
func (Violations) EnumDescriptor() ([]byte, []int) {
	return file_tictactoe_battle_resource_proto_rawDescGZIP(), []int{0}
}

type Player int32

const (
	Player_PLAYER_UNKNOWN  Player = 0
	Player_PLAYER_A        Player = 1
	Player_PLAYER_B        Player = 2
	Player_PLAYER_AUDIENCE Player = 3
)

// Enum value maps for Player.
var (
	Player_name = map[int32]string{
		0: "PLAYER_UNKNOWN",
		1: "PLAYER_A",
		2: "PLAYER_B",
		3: "PLAYER_AUDIENCE",
	}
	Player_value = map[string]int32{
		"PLAYER_UNKNOWN":  0,
		"PLAYER_A":        1,
		"PLAYER_B":        2,
		"PLAYER_AUDIENCE": 3,
	}
)

func (x Player) Enum() *Player {
	p := new(Player)
	*p = x
	return p
}

func (x Player) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Player) Descriptor() protoreflect.EnumDescriptor {
	return file_tictactoe_battle_resource_proto_enumTypes[1].Descriptor()
}

func (Player) Type() protoreflect.EnumType {
	return &file_tictactoe_battle_resource_proto_enumTypes[1]
}

func (x Player) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Player.Descriptor instead.
func (Player) EnumDescriptor() ([]byte, []int) {
	return file_tictactoe_battle_resource_proto_rawDescGZIP(), []int{1}
}

type Piece int32

const (
	Piece_PIECE_UNKNOWN Piece = 0
	Piece_PIECE_S       Piece = 1
	Piece_PIECE_M       Piece = 2
	Piece_PIECE_L       Piece = 3
)

// Enum value maps for Piece.
var (
	Piece_name = map[int32]string{
		0: "PIECE_UNKNOWN",
		1: "PIECE_S",
		2: "PIECE_M",
		3: "PIECE_L",
	}
	Piece_value = map[string]int32{
		"PIECE_UNKNOWN": 0,
		"PIECE_S":       1,
		"PIECE_M":       2,
		"PIECE_L":       3,
	}
)

func (x Piece) Enum() *Piece {
	p := new(Piece)
	*p = x
	return p
}

func (x Piece) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Piece) Descriptor() protoreflect.EnumDescriptor {
	return file_tictactoe_battle_resource_proto_enumTypes[2].Descriptor()
}

func (Piece) Type() protoreflect.EnumType {
	return &file_tictactoe_battle_resource_proto_enumTypes[2]
}

func (x Piece) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Piece.Descriptor instead.
func (Piece) EnumDescriptor() ([]byte, []int) {
	return file_tictactoe_battle_resource_proto_rawDescGZIP(), []int{2}
}

type BattleState int32

const (
	BattleState_BATTLE_STATE_UNKNOWN              BattleState = 0
	BattleState_BATTLE_STATE_MEETING              BattleState = 1
	BattleState_BATTLE_STATE_ERROR                BattleState = 2
	BattleState_BATTLE_STATE_PLAYER_TURN          BattleState = 3
	BattleState_BATTLE_STATE_PLAYER_TURN_PICKED   BattleState = 4
	BattleState_BATTLE_STATE_OPPONENT_TURN        BattleState = 5
	BattleState_BATTLE_STATE_OPPONENT_TURN_PICKED BattleState = 6
	BattleState_BATTLE_STATE_WIN                  BattleState = 7
	BattleState_BATTLE_STATE_LOSE                 BattleState = 8
)

// Enum value maps for BattleState.
var (
	BattleState_name = map[int32]string{
		0: "BATTLE_STATE_UNKNOWN",
		1: "BATTLE_STATE_MEETING",
		2: "BATTLE_STATE_ERROR",
		3: "BATTLE_STATE_PLAYER_TURN",
		4: "BATTLE_STATE_PLAYER_TURN_PICKED",
		5: "BATTLE_STATE_OPPONENT_TURN",
		6: "BATTLE_STATE_OPPONENT_TURN_PICKED",
		7: "BATTLE_STATE_WIN",
		8: "BATTLE_STATE_LOSE",
	}
	BattleState_value = map[string]int32{
		"BATTLE_STATE_UNKNOWN":              0,
		"BATTLE_STATE_MEETING":              1,
		"BATTLE_STATE_ERROR":                2,
		"BATTLE_STATE_PLAYER_TURN":          3,
		"BATTLE_STATE_PLAYER_TURN_PICKED":   4,
		"BATTLE_STATE_OPPONENT_TURN":        5,
		"BATTLE_STATE_OPPONENT_TURN_PICKED": 6,
		"BATTLE_STATE_WIN":                  7,
		"BATTLE_STATE_LOSE":                 8,
	}
)

func (x BattleState) Enum() *BattleState {
	p := new(BattleState)
	*p = x
	return p
}

func (x BattleState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BattleState) Descriptor() protoreflect.EnumDescriptor {
	return file_tictactoe_battle_resource_proto_enumTypes[3].Descriptor()
}

func (BattleState) Type() protoreflect.EnumType {
	return &file_tictactoe_battle_resource_proto_enumTypes[3]
}

func (x BattleState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BattleState.Descriptor instead.
func (BattleState) EnumDescriptor() ([]byte, []int) {
	return file_tictactoe_battle_resource_proto_rawDescGZIP(), []int{3}
}

type Position int32

const (
	Position_POSITION_X0Y0      Position = 0
	Position_POSITION_X1Y0      Position = 1
	Position_POSITION_X2Y0      Position = 2
	Position_POSITION_X0Y1      Position = 3
	Position_POSITION_X1Y1      Position = 4
	Position_POSITION_X2Y1      Position = 5
	Position_POSITION_X0Y2      Position = 6
	Position_POSITION_X1Y2      Position = 7
	Position_POSITION_X2Y2      Position = 8
	Position_POSITION_UNDEFINED Position = 99
)

// Enum value maps for Position.
var (
	Position_name = map[int32]string{
		0:  "POSITION_X0Y0",
		1:  "POSITION_X1Y0",
		2:  "POSITION_X2Y0",
		3:  "POSITION_X0Y1",
		4:  "POSITION_X1Y1",
		5:  "POSITION_X2Y1",
		6:  "POSITION_X0Y2",
		7:  "POSITION_X1Y2",
		8:  "POSITION_X2Y2",
		99: "POSITION_UNDEFINED",
	}
	Position_value = map[string]int32{
		"POSITION_X0Y0":      0,
		"POSITION_X1Y0":      1,
		"POSITION_X2Y0":      2,
		"POSITION_X0Y1":      3,
		"POSITION_X1Y1":      4,
		"POSITION_X2Y1":      5,
		"POSITION_X0Y2":      6,
		"POSITION_X1Y2":      7,
		"POSITION_X2Y2":      8,
		"POSITION_UNDEFINED": 99,
	}
)

func (x Position) Enum() *Position {
	p := new(Position)
	*p = x
	return p
}

func (x Position) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Position) Descriptor() protoreflect.EnumDescriptor {
	return file_tictactoe_battle_resource_proto_enumTypes[4].Descriptor()
}

func (Position) Type() protoreflect.EnumType {
	return &file_tictactoe_battle_resource_proto_enumTypes[4]
}

func (x Position) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Position.Descriptor instead.
func (Position) EnumDescriptor() ([]byte, []int) {
	return file_tictactoe_battle_resource_proto_rawDescGZIP(), []int{4}
}

type WinLine int32

const (
	WinLine_WIN_LINE_UNKNOWN WinLine = 0
	WinLine_WIN_LINE_1       WinLine = 1
	WinLine_WIN_LINE_2       WinLine = 2
	WinLine_WIN_LINE_3       WinLine = 3
	WinLine_WIN_LINE_4       WinLine = 4
	WinLine_WIN_LINE_5       WinLine = 5
	WinLine_WIN_LINE_6       WinLine = 6
	WinLine_WIN_LINE_7       WinLine = 7
	WinLine_WIN_LINE_8       WinLine = 8
)

// Enum value maps for WinLine.
var (
	WinLine_name = map[int32]string{
		0: "WIN_LINE_UNKNOWN",
		1: "WIN_LINE_1",
		2: "WIN_LINE_2",
		3: "WIN_LINE_3",
		4: "WIN_LINE_4",
		5: "WIN_LINE_5",
		6: "WIN_LINE_6",
		7: "WIN_LINE_7",
		8: "WIN_LINE_8",
	}
	WinLine_value = map[string]int32{
		"WIN_LINE_UNKNOWN": 0,
		"WIN_LINE_1":       1,
		"WIN_LINE_2":       2,
		"WIN_LINE_3":       3,
		"WIN_LINE_4":       4,
		"WIN_LINE_5":       5,
		"WIN_LINE_6":       6,
		"WIN_LINE_7":       7,
		"WIN_LINE_8":       8,
	}
)

func (x WinLine) Enum() *WinLine {
	p := new(WinLine)
	*p = x
	return p
}

func (x WinLine) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WinLine) Descriptor() protoreflect.EnumDescriptor {
	return file_tictactoe_battle_resource_proto_enumTypes[5].Descriptor()
}

func (WinLine) Type() protoreflect.EnumType {
	return &file_tictactoe_battle_resource_proto_enumTypes[5]
}

func (x WinLine) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WinLine.Descriptor instead.
func (WinLine) EnumDescriptor() ([]byte, []int) {
	return file_tictactoe_battle_resource_proto_rawDescGZIP(), []int{5}
}

type Login struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoginId   string `protobuf:"bytes,1,opt,name=login_id,json=loginId,proto3" json:"login_id,omitempty"`
	SessionId string `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *Login) Reset() {
	*x = Login{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tictactoe_battle_resource_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Login) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Login) ProtoMessage() {}

func (x *Login) ProtoReflect() protoreflect.Message {
	mi := &file_tictactoe_battle_resource_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Login.ProtoReflect.Descriptor instead.
func (*Login) Descriptor() ([]byte, []int) {
	return file_tictactoe_battle_resource_proto_rawDescGZIP(), []int{0}
}

func (x *Login) GetLoginId() string {
	if x != nil {
		return x.LoginId
	}
	return ""
}

func (x *Login) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type Holding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	S uint64 `protobuf:"varint,1,opt,name=s,proto3" json:"s,omitempty"`
	M uint64 `protobuf:"varint,2,opt,name=m,proto3" json:"m,omitempty"`
	L uint64 `protobuf:"varint,3,opt,name=l,proto3" json:"l,omitempty"`
}

func (x *Holding) Reset() {
	*x = Holding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tictactoe_battle_resource_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Holding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Holding) ProtoMessage() {}

func (x *Holding) ProtoReflect() protoreflect.Message {
	mi := &file_tictactoe_battle_resource_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Holding.ProtoReflect.Descriptor instead.
func (*Holding) Descriptor() ([]byte, []int) {
	return file_tictactoe_battle_resource_proto_rawDescGZIP(), []int{1}
}

func (x *Holding) GetS() uint64 {
	if x != nil {
		return x.S
	}
	return 0
}

func (x *Holding) GetM() uint64 {
	if x != nil {
		return x.M
	}
	return 0
}

func (x *Holding) GetL() uint64 {
	if x != nil {
		return x.L
	}
	return 0
}

type PieceStack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	S Player `protobuf:"varint,1,opt,name=s,proto3,enum=tictactoe_battle.Player" json:"s,omitempty"`
	M Player `protobuf:"varint,2,opt,name=m,proto3,enum=tictactoe_battle.Player" json:"m,omitempty"`
	L Player `protobuf:"varint,3,opt,name=l,proto3,enum=tictactoe_battle.Player" json:"l,omitempty"`
}

func (x *PieceStack) Reset() {
	*x = PieceStack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tictactoe_battle_resource_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PieceStack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PieceStack) ProtoMessage() {}

func (x *PieceStack) ProtoReflect() protoreflect.Message {
	mi := &file_tictactoe_battle_resource_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PieceStack.ProtoReflect.Descriptor instead.
func (*PieceStack) Descriptor() ([]byte, []int) {
	return file_tictactoe_battle_resource_proto_rawDescGZIP(), []int{2}
}

func (x *PieceStack) GetS() Player {
	if x != nil {
		return x.S
	}
	return Player_PLAYER_UNKNOWN
}

func (x *PieceStack) GetM() Player {
	if x != nil {
		return x.M
	}
	return Player_PLAYER_UNKNOWN
}

func (x *PieceStack) GetL() Player {
	if x != nil {
		return x.L
	}
	return Player_PLAYER_UNKNOWN
}

type BattleSituation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId         string      `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	State          BattleState `protobuf:"varint,2,opt,name=state,proto3,enum=tictactoe_battle.BattleState" json:"state,omitempty"`
	PickedPosition Position    `protobuf:"varint,3,opt,name=PickedPosition,proto3,enum=tictactoe_battle.Position" json:"PickedPosition,omitempty"`
	PickedPiece    Piece       `protobuf:"varint,4,opt,name=PickedPiece,proto3,enum=tictactoe_battle.Piece" json:"PickedPiece,omitempty"`
	Player         Player      `protobuf:"varint,10,opt,name=player,proto3,enum=tictactoe_battle.Player" json:"player,omitempty"`
	PlayerAId      string      `protobuf:"bytes,11,opt,name=player_a_id,json=playerAId,proto3" json:"player_a_id,omitempty"`
	PlayerBId      string      `protobuf:"bytes,12,opt,name=player_b_id,json=playerBId,proto3" json:"player_b_id,omitempty"`
	Holding        *Holding    `protobuf:"bytes,13,opt,name=holding,proto3" json:"holding,omitempty"`
	// field position
	// 0 1 2
	// 3 4 5
	// 6 7 8
	Field   []*PieceStack `protobuf:"bytes,20,rep,name=field,proto3" json:"field,omitempty"`
	WinLine WinLine       `protobuf:"varint,30,opt,name=win_line,json=winLine,proto3,enum=tictactoe_battle.WinLine" json:"win_line,omitempty"`
}

func (x *BattleSituation) Reset() {
	*x = BattleSituation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tictactoe_battle_resource_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleSituation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleSituation) ProtoMessage() {}

func (x *BattleSituation) ProtoReflect() protoreflect.Message {
	mi := &file_tictactoe_battle_resource_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleSituation.ProtoReflect.Descriptor instead.
func (*BattleSituation) Descriptor() ([]byte, []int) {
	return file_tictactoe_battle_resource_proto_rawDescGZIP(), []int{3}
}

func (x *BattleSituation) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *BattleSituation) GetState() BattleState {
	if x != nil {
		return x.State
	}
	return BattleState_BATTLE_STATE_UNKNOWN
}

func (x *BattleSituation) GetPickedPosition() Position {
	if x != nil {
		return x.PickedPosition
	}
	return Position_POSITION_X0Y0
}

func (x *BattleSituation) GetPickedPiece() Piece {
	if x != nil {
		return x.PickedPiece
	}
	return Piece_PIECE_UNKNOWN
}

func (x *BattleSituation) GetPlayer() Player {
	if x != nil {
		return x.Player
	}
	return Player_PLAYER_UNKNOWN
}

func (x *BattleSituation) GetPlayerAId() string {
	if x != nil {
		return x.PlayerAId
	}
	return ""
}

func (x *BattleSituation) GetPlayerBId() string {
	if x != nil {
		return x.PlayerBId
	}
	return ""
}

func (x *BattleSituation) GetHolding() *Holding {
	if x != nil {
		return x.Holding
	}
	return nil
}

func (x *BattleSituation) GetField() []*PieceStack {
	if x != nil {
		return x.Field
	}
	return nil
}

func (x *BattleSituation) GetWinLine() WinLine {
	if x != nil {
		return x.WinLine
	}
	return WinLine_WIN_LINE_UNKNOWN
}

var File_tictactoe_battle_resource_proto protoreflect.FileDescriptor

var file_tictactoe_battle_resource_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x74, 0x6f, 0x65, 0x5f, 0x62, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x10, 0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x74, 0x6f, 0x65, 0x5f, 0x62, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x22, 0x41, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x08,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x07, 0x48, 0x6f, 0x6c, 0x64, 0x69, 0x6e,
	0x67, 0x12, 0x0c, 0x0a, 0x01, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x01, 0x73, 0x12,
	0x0c, 0x0a, 0x01, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x01, 0x6d, 0x12, 0x0c, 0x0a,
	0x01, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x01, 0x6c, 0x22, 0x84, 0x01, 0x0a, 0x0a,
	0x50, 0x69, 0x65, 0x63, 0x65, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x26, 0x0a, 0x01, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x74, 0x6f,
	0x65, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52,
	0x01, 0x73, 0x12, 0x26, 0x0a, 0x01, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e,
	0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x74, 0x6f, 0x65, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x01, 0x6d, 0x12, 0x26, 0x0a, 0x01, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x74, 0x6f,
	0x65, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52,
	0x01, 0x6c, 0x22, 0xef, 0x03, 0x0a, 0x0f, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x69, 0x74,
	0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12,
	0x33, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d,
	0x2e, 0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x74, 0x6f, 0x65, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x50, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x74,
	0x69, 0x63, 0x74, 0x61, 0x63, 0x74, 0x6f, 0x65, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x50, 0x69, 0x63, 0x6b, 0x65, 0x64,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0b, 0x50, 0x69, 0x63, 0x6b,
	0x65, 0x64, 0x50, 0x69, 0x65, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e,
	0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x74, 0x6f, 0x65, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x2e, 0x50, 0x69, 0x65, 0x63, 0x65, 0x52, 0x0b, 0x50, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x50, 0x69,
	0x65, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x74, 0x6f, 0x65, 0x5f,
	0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x06, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x61, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x41, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x62, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x42, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x07, 0x68, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x74,
	0x6f, 0x65, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x48, 0x6f, 0x6c, 0x64, 0x69, 0x6e,
	0x67, 0x52, 0x07, 0x68, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x32, 0x0a, 0x05, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x69, 0x63, 0x74,
	0x61, 0x63, 0x74, 0x6f, 0x65, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x50, 0x69, 0x65,
	0x63, 0x65, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x34,
	0x0a, 0x08, 0x77, 0x69, 0x6e, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x19, 0x2e, 0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x74, 0x6f, 0x65, 0x5f, 0x62, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x2e, 0x57, 0x69, 0x6e, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x07, 0x77, 0x69, 0x6e,
	0x4c, 0x69, 0x6e, 0x65, 0x2a, 0x25, 0x0a, 0x0a, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x5f,
	0x56, 0x49, 0x4f, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x2a, 0x4d, 0x0a, 0x06, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x4c, 0x41,
	0x59, 0x45, 0x52, 0x5f, 0x41, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x4c, 0x41, 0x59, 0x45,
	0x52, 0x5f, 0x42, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f,
	0x41, 0x55, 0x44, 0x49, 0x45, 0x4e, 0x43, 0x45, 0x10, 0x03, 0x2a, 0x41, 0x0a, 0x05, 0x50, 0x69,
	0x65, 0x63, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x49, 0x45, 0x43, 0x45, 0x5f, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x49, 0x45, 0x43, 0x45, 0x5f,
	0x53, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x49, 0x45, 0x43, 0x45, 0x5f, 0x4d, 0x10, 0x02,
	0x12, 0x0b, 0x0a, 0x07, 0x50, 0x49, 0x45, 0x43, 0x45, 0x5f, 0x4c, 0x10, 0x03, 0x2a, 0x90, 0x02,
	0x0a, 0x0b, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a,
	0x14, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x42, 0x41, 0x54, 0x54, 0x4c,
	0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4d, 0x45, 0x45, 0x54, 0x49, 0x4e, 0x47, 0x10,
	0x01, 0x12, 0x16, 0x0a, 0x12, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x42, 0x41, 0x54,
	0x54, 0x4c, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52,
	0x5f, 0x54, 0x55, 0x52, 0x4e, 0x10, 0x03, 0x12, 0x23, 0x0a, 0x1f, 0x42, 0x41, 0x54, 0x54, 0x4c,
	0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x54,
	0x55, 0x52, 0x4e, 0x5f, 0x50, 0x49, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x04, 0x12, 0x1e, 0x0a, 0x1a,
	0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x50, 0x50,
	0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x55, 0x52, 0x4e, 0x10, 0x05, 0x12, 0x25, 0x0a, 0x21,
	0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x50, 0x50,
	0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x55, 0x52, 0x4e, 0x5f, 0x50, 0x49, 0x43, 0x4b, 0x45,
	0x44, 0x10, 0x06, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x57, 0x49, 0x4e, 0x10, 0x07, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x41, 0x54,
	0x54, 0x4c, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4c, 0x4f, 0x53, 0x45, 0x10, 0x08,
	0x2a, 0xcd, 0x01, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x11, 0x0a,
	0x0d, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x58, 0x30, 0x59, 0x30, 0x10, 0x00,
	0x12, 0x11, 0x0a, 0x0d, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x58, 0x31, 0x59,
	0x30, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x58, 0x32, 0x59, 0x30, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x58, 0x30, 0x59, 0x31, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x4f, 0x53,
	0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x58, 0x31, 0x59, 0x31, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d,
	0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x58, 0x32, 0x59, 0x31, 0x10, 0x05, 0x12,
	0x11, 0x0a, 0x0d, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x58, 0x30, 0x59, 0x32,
	0x10, 0x06, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x58,
	0x31, 0x59, 0x32, 0x10, 0x07, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x58, 0x32, 0x59, 0x32, 0x10, 0x08, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x4f, 0x53, 0x49,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x63,
	0x2a, 0x9f, 0x01, 0x0a, 0x07, 0x57, 0x69, 0x6e, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x10,
	0x57, 0x49, 0x4e, 0x5f, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x57, 0x49, 0x4e, 0x5f, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x31,
	0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x57, 0x49, 0x4e, 0x5f, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x32,
	0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x57, 0x49, 0x4e, 0x5f, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x33,
	0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x57, 0x49, 0x4e, 0x5f, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x34,
	0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x57, 0x49, 0x4e, 0x5f, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x35,
	0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x57, 0x49, 0x4e, 0x5f, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x36,
	0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x57, 0x49, 0x4e, 0x5f, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x37,
	0x10, 0x07, 0x12, 0x0e, 0x0a, 0x0a, 0x57, 0x49, 0x4e, 0x5f, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x38,
	0x10, 0x08, 0x42, 0x25, 0x5a, 0x23, 0x2e, 0x2f, 0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x74, 0x6f,
	0x65, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x3b, 0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x74,
	0x6f, 0x65, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_tictactoe_battle_resource_proto_rawDescOnce sync.Once
	file_tictactoe_battle_resource_proto_rawDescData = file_tictactoe_battle_resource_proto_rawDesc
)

func file_tictactoe_battle_resource_proto_rawDescGZIP() []byte {
	file_tictactoe_battle_resource_proto_rawDescOnce.Do(func() {
		file_tictactoe_battle_resource_proto_rawDescData = protoimpl.X.CompressGZIP(file_tictactoe_battle_resource_proto_rawDescData)
	})
	return file_tictactoe_battle_resource_proto_rawDescData
}

var file_tictactoe_battle_resource_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_tictactoe_battle_resource_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_tictactoe_battle_resource_proto_goTypes = []interface{}{
	(Violations)(0),         // 0: tictactoe_battle.Violations
	(Player)(0),             // 1: tictactoe_battle.Player
	(Piece)(0),              // 2: tictactoe_battle.Piece
	(BattleState)(0),        // 3: tictactoe_battle.BattleState
	(Position)(0),           // 4: tictactoe_battle.Position
	(WinLine)(0),            // 5: tictactoe_battle.WinLine
	(*Login)(nil),           // 6: tictactoe_battle.Login
	(*Holding)(nil),         // 7: tictactoe_battle.Holding
	(*PieceStack)(nil),      // 8: tictactoe_battle.PieceStack
	(*BattleSituation)(nil), // 9: tictactoe_battle.BattleSituation
}
var file_tictactoe_battle_resource_proto_depIdxs = []int32{
	1,  // 0: tictactoe_battle.PieceStack.s:type_name -> tictactoe_battle.Player
	1,  // 1: tictactoe_battle.PieceStack.m:type_name -> tictactoe_battle.Player
	1,  // 2: tictactoe_battle.PieceStack.l:type_name -> tictactoe_battle.Player
	3,  // 3: tictactoe_battle.BattleSituation.state:type_name -> tictactoe_battle.BattleState
	4,  // 4: tictactoe_battle.BattleSituation.PickedPosition:type_name -> tictactoe_battle.Position
	2,  // 5: tictactoe_battle.BattleSituation.PickedPiece:type_name -> tictactoe_battle.Piece
	1,  // 6: tictactoe_battle.BattleSituation.player:type_name -> tictactoe_battle.Player
	7,  // 7: tictactoe_battle.BattleSituation.holding:type_name -> tictactoe_battle.Holding
	8,  // 8: tictactoe_battle.BattleSituation.field:type_name -> tictactoe_battle.PieceStack
	5,  // 9: tictactoe_battle.BattleSituation.win_line:type_name -> tictactoe_battle.WinLine
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_tictactoe_battle_resource_proto_init() }
func file_tictactoe_battle_resource_proto_init() {
	if File_tictactoe_battle_resource_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tictactoe_battle_resource_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Login); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tictactoe_battle_resource_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Holding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tictactoe_battle_resource_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PieceStack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tictactoe_battle_resource_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleSituation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tictactoe_battle_resource_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tictactoe_battle_resource_proto_goTypes,
		DependencyIndexes: file_tictactoe_battle_resource_proto_depIdxs,
		EnumInfos:         file_tictactoe_battle_resource_proto_enumTypes,
		MessageInfos:      file_tictactoe_battle_resource_proto_msgTypes,
	}.Build()
	File_tictactoe_battle_resource_proto = out.File
	file_tictactoe_battle_resource_proto_rawDesc = nil
	file_tictactoe_battle_resource_proto_goTypes = nil
	file_tictactoe_battle_resource_proto_depIdxs = nil
}
